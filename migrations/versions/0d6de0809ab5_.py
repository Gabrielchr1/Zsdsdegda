"""empty message

Revision ID: 0d6de0809ab5
Revises: 
Create Date: 2025-10-09 14:07:43.332342

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0d6de0809ab5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('concessionaria',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('fio_b_price', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('manufacturer', sa.String(length=100), nullable=True),
    sa.Column('power_wp', sa.Integer(), nullable=True),
    sa.Column('warranty_years', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('product', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_product_category'), ['category'], unique=False)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('client',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_type', sa.String(length=10), nullable=True),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('fantasy_name', sa.String(length=120), nullable=True),
    sa.Column('cpf_cnpj', sa.String(length=20), nullable=True),
    sa.Column('state_registration', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('cep', sa.String(length=10), nullable=True),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('number', sa.String(length=20), nullable=True),
    sa.Column('complement', sa.String(length=100), nullable=True),
    sa.Column('neighborhood', sa.String(length=100), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=2), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('client', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_client_name'), ['name'], unique=False)

    op.create_table('proposal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=150), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('creation_date', sa.DateTime(), nullable=True),
    sa.Column('valid_until', sa.DateTime(), nullable=True),
    sa.Column('total_investment', sa.Float(), nullable=True),
    sa.Column('estimated_savings_per_year', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('panel_power_wp', sa.Integer(), nullable=True),
    sa.Column('panel_quantity', sa.Integer(), nullable=True),
    sa.Column('recommended_inverter_kw', sa.Float(), nullable=True),
    sa.Column('kwh_price', sa.Float(), nullable=True),
    sa.Column('public_lighting_fee', sa.Float(), nullable=True),
    sa.Column('concessionaria_id', sa.Integer(), nullable=True),
    sa.Column('consumption_input_type', sa.String(length=10), nullable=True),
    sa.Column('avg_consumption_kwh', sa.Float(), nullable=True),
    sa.Column('avg_bill_brl', sa.Float(), nullable=True),
    sa.Column('grid_type', sa.String(length=20), nullable=True),
    sa.Column('solar_irradiance', sa.Float(), nullable=True),
    sa.Column('system_power_kwp', sa.Float(), nullable=True),
    sa.Column('monthly_production_kwh', sa.JSON(), nullable=True),
    sa.Column('payback_years', sa.Float(), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['concessionaria_id'], ['concessionaria.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('proposal', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_proposal_creation_date'), ['creation_date'], unique=False)

    op.create_table('proposal_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('unit_price', sa.Float(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('proposal_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['proposal_id'], ['proposal.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('proposal_item')
    with op.batch_alter_table('proposal', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_proposal_creation_date'))

    op.drop_table('proposal')
    with op.batch_alter_table('client', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_client_name'))

    op.drop_table('client')
    op.drop_table('user')
    with op.batch_alter_table('product', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_product_category'))

    op.drop_table('product')
    op.drop_table('concessionaria')
    # ### end Alembic commands ###
